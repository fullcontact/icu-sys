#![allow(unused_imports)]
/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
use libc;
use libc::*;
use utypes::*;
use ustring::*;
use utf8::*;
use utf16::*;
use uchar::*;
use uscript::*;
use uset::*;
use ucnv::*;
use uloc::*;
use ures::*;
use unorm2::*;
use ucal::*;
use udat::*;
use unum::*;
use utrans::*;
use ubidi::*;
use ushape::*;
use ucol::*;
use ubrk::*;
use uregex::*;
use usprep::*;
use uidna::*;
use uspoof::*;
use utmscale::*;
use umachine::*;
use parseerr::*;
use utext::*;
use uversion::*;
use uiter::*;
use uenum::*;
use urep::*;
use udisplaycontext::*;
use uformattable::*;
use umisc::*;
use ufieldpositer::*;
use ucnv_err::*;

pub enum UStringSearch { }
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum USearchAttribute {
    USEARCH_OVERLAP = 0,
    USEARCH_CANONICAL_MATCH = 1,
    USEARCH_ELEMENT_COMPARISON = 2,
    USEARCH_ATTRIBUTE_COUNT = 3,
}
#[derive(Copy, Clone)]
#[repr(i32)]
#[derive(Debug)]
pub enum USearchAttributeValue {
    USEARCH_DEFAULT = -1,
    USEARCH_OFF = 0,
    USEARCH_ON = 1,
    USEARCH_STANDARD_ELEMENT_COMPARISON = 2,
    USEARCH_PATTERN_BASE_WEIGHT_IS_WILDCARD = 3,
    USEARCH_ANY_BASE_WEIGHT_IS_WILDCARD = 4,
    USEARCH_ATTRIBUTE_VALUE_COUNT = 5,
}
#[link(name = "icuuc", kind = "dylib")]
#[link(name = "icudata", kind = "dylib")]
extern "C" {
    pub fn usearch_open_57(pattern: *const UChar, patternlength: int32_t,
                           text: *const UChar, textlength: int32_t,
                           locale: *const ::std::os::raw::c_char,
                           breakiter: *mut UBreakIterator,
                           status: *mut UErrorCode) -> *mut UStringSearch;
    pub fn usearch_openFromCollator_57(pattern: *const UChar,
                                       patternlength: int32_t,
                                       text: *const UChar,
                                       textlength: int32_t,
                                       collator: *const UCollator,
                                       breakiter: *mut UBreakIterator,
                                       status: *mut UErrorCode)
     -> *mut UStringSearch;
    pub fn usearch_close_57(searchiter: *mut UStringSearch);
    pub fn usearch_setOffset_57(strsrch: *mut UStringSearch,
                                position: int32_t, status: *mut UErrorCode);
    pub fn usearch_getOffset_57(strsrch: *const UStringSearch) -> int32_t;
    pub fn usearch_setAttribute_57(strsrch: *mut UStringSearch,
                                   attribute: USearchAttribute,
                                   value: USearchAttributeValue,
                                   status: *mut UErrorCode);
    pub fn usearch_getAttribute_57(strsrch: *const UStringSearch,
                                   attribute: USearchAttribute)
     -> USearchAttributeValue;
    pub fn usearch_getMatchedStart_57(strsrch: *const UStringSearch)
     -> int32_t;
    pub fn usearch_getMatchedLength_57(strsrch: *const UStringSearch)
     -> int32_t;
    pub fn usearch_getMatchedText_57(strsrch: *const UStringSearch,
                                     result: *mut UChar,
                                     resultCapacity: int32_t,
                                     status: *mut UErrorCode) -> int32_t;
    pub fn usearch_setBreakIterator_57(strsrch: *mut UStringSearch,
                                       breakiter: *mut UBreakIterator,
                                       status: *mut UErrorCode);
    pub fn usearch_getBreakIterator_57(strsrch: *const UStringSearch)
     -> *const UBreakIterator;
    pub fn usearch_setText_57(strsrch: *mut UStringSearch, text: *const UChar,
                              textlength: int32_t, status: *mut UErrorCode);
    pub fn usearch_getText_57(strsrch: *const UStringSearch,
                              length: *mut int32_t) -> *const UChar;
    pub fn usearch_getCollator_57(strsrch: *const UStringSearch)
     -> *mut UCollator;
    pub fn usearch_setCollator_57(strsrch: *mut UStringSearch,
                                  collator: *const UCollator,
                                  status: *mut UErrorCode);
    pub fn usearch_setPattern_57(strsrch: *mut UStringSearch,
                                 pattern: *const UChar,
                                 patternlength: int32_t,
                                 status: *mut UErrorCode);
    pub fn usearch_getPattern_57(strsrch: *const UStringSearch,
                                 length: *mut int32_t) -> *const UChar;
    pub fn usearch_first_57(strsrch: *mut UStringSearch,
                            status: *mut UErrorCode) -> int32_t;
    pub fn usearch_following_57(strsrch: *mut UStringSearch,
                                position: int32_t, status: *mut UErrorCode)
     -> int32_t;
    pub fn usearch_last_57(strsrch: *mut UStringSearch,
                           status: *mut UErrorCode) -> int32_t;
    pub fn usearch_preceding_57(strsrch: *mut UStringSearch,
                                position: int32_t, status: *mut UErrorCode)
     -> int32_t;
    pub fn usearch_next_57(strsrch: *mut UStringSearch,
                           status: *mut UErrorCode) -> int32_t;
    pub fn usearch_previous_57(strsrch: *mut UStringSearch,
                               status: *mut UErrorCode) -> int32_t;
    pub fn usearch_reset_57(strsrch: *mut UStringSearch);
    pub fn usearch_search_57(strsrch: *mut UStringSearch, startIdx: int32_t,
                             matchStart: *mut int32_t,
                             matchLimit: *mut int32_t,
                             status: *mut UErrorCode) -> UBool;
    pub fn usearch_searchBackwards_57(strsrch: *mut UStringSearch,
                                      startIdx: int32_t,
                                      matchStart: *mut int32_t,
                                      matchLimit: *mut int32_t,
                                      status: *mut UErrorCode) -> UBool;
}
