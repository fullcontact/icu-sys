#![allow(unused_imports)]
/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
use libc;
use libc::*;
use utypes::*;
use ustring::*;
use utf8::*;
use utf16::*;
use uchar::*;
use uscript::*;
use uset::*;
use ucnv::*;
use uloc::*;
use ures::*;
use unorm2::*;
use ucal::*;
use udat::*;
use unum::*;
use utrans::*;
use ubidi::*;
use ushape::*;
use ucol::*;
use usearch::*;
use ubrk::*;
use uregex::*;
use usprep::*;
use uidna::*;
use uspoof::*;
use utmscale::*;
use umachine::*;
use parseerr::*;
use utext::*;
use uversion::*;
use uiter::*;
use urep::*;
use udisplaycontext::*;
use uformattable::*;
use umisc::*;
use ufieldpositer::*;
use ucnv_err::*;

pub enum UEnumeration { }
#[link(name = "icuuc", kind = "dylib")]
#[link(name = "icudata", kind = "dylib")]
extern "C" {
    pub fn uenum_close_57(en: *mut UEnumeration);
    pub fn uenum_count_57(en: *mut UEnumeration, status: *mut UErrorCode)
     -> int32_t;
    pub fn uenum_unext_57(en: *mut UEnumeration, resultLength: *mut int32_t,
                          status: *mut UErrorCode) -> *const UChar;
    pub fn uenum_next_57(en: *mut UEnumeration, resultLength: *mut int32_t,
                         status: *mut UErrorCode)
     -> *const ::std::os::raw::c_char;
    pub fn uenum_reset_57(en: *mut UEnumeration, status: *mut UErrorCode);
    pub fn uenum_openUCharStringsEnumeration_57(strings: *mut *const UChar,
                                                count: int32_t,
                                                ec: *mut UErrorCode)
     -> *mut UEnumeration;
    pub fn uenum_openCharStringsEnumeration_57(strings:
                                                   *mut *const ::std::os::raw::c_char,
                                               count: int32_t,
                                               ec: *mut UErrorCode)
     -> *mut UEnumeration;
}
